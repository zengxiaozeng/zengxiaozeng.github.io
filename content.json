{"meta":{"title":"zengxiaozeng's Blog","subtitle":"just coding ~~~","description":null,"author":"zengxiaozeng","url":"http://yoursite.com"},"pages":[{"title":"","date":"2017-06-01T02:35:14.342Z","updated":"2017-06-01T02:35:14.342Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2017-06-01T02:34:37.445Z","updated":"2017-06-01T02:34:37.445Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"封装的ajax方法","slug":"封装的ajax方法","date":"2017-06-09T09:38:42.000Z","updated":"2017-06-09T09:54:25.113Z","comments":true,"path":"2017/06/09/封装的ajax方法/","link":"","permalink":"http://yoursite.com/2017/06/09/封装的ajax方法/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899function ajax(params) &#123; params = params || &#123;&#125;; params.data = params.data || &#123;&#125;; var json = params.jsonp ? jsonp(params) : json(params); // ajax请求 function json(params) &#123; params.type = (params.type || 'GET').toUpperCase(); params.data = formatParams(params.data); var xhr = null; // 实例化XMLHttpRequest对象 if(window.XMLHttpRequest) &#123; xhr = new XMLHttpRequest(); &#125; else &#123; // IE6及其以下版本 xhr = new ActiveXObjcet('Microsoft.XMLHTTP'); &#125;; // 监听事件 xhr.onreadystatechange = function() &#123; if(xhr.readyState == 4) &#123; var status = xhr.status; if(status &gt;= 200 &amp;&amp; status &lt; 300) &#123; var response = ''; var type = xhr.getResponseHeader('Content-type'); if(type.indexOf('xml') !== -1 &amp;&amp; xhr.responseXML) &#123; response = xhr.responseXML; //Document对象响应 &#125; else if(type === 'application/json') &#123; response = JSON.parse(xhr.responseText); //JSON响应 &#125; else &#123; response = xhr.responseText; //字符串响应 &#125;; params.success &amp;&amp; params.success(response); &#125; else &#123; params.error &amp;&amp; params.error(status); &#125; &#125; &#125;; // 连接和传输数据 if(params.type == 'GET') &#123; xhr.open(params.type, params.url + '?' + params.data, true); xhr.send(null); &#125; else &#123; xhr.open(params.type, params.url, true); //设置提交时的内容类型 xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8'); xhr.send(params.data); &#125; &#125; // jsonp请求 function jsonp(params) &#123; //创建script标签并加入到页面中 var callbackName = params.jsonp; var head = document.getElementsByTagName('head')[0]; // 设置传递给后台的回调参数名 params.data['callback'] = callbackName; var data = formatParams(params.data); var script = document.createElement('script'); head.appendChild(script); //创建jsonp回调函数 window[callbackName] = function(json) &#123; head.removeChild(script); clearTimeout(script.timer); window[callbackName] = null; params.success &amp;&amp; params.success(json); &#125;; //发送请求 script.src = params.url + '?' + data; //超时处理 if(params.time) &#123; script.timer = setTimeout(function() &#123; window[callbackName] = null; head.removeChild(script); params.error &amp;&amp; params.error(&#123; message: '超时' &#125;); &#125;, time); &#125; &#125;; //格式化参数 function formatParams(data) &#123; var arr = []; for(var name in data) &#123; arr.push(encodeURIComponent(name) + '=' + encodeURIComponent(data[name])); &#125;; // 添加一个随机数，防止缓存 arr.push('v=' + random()); return arr.join('&amp;'); &#125; // 获取随机数 function random() &#123; return Math.floor(Math.random() * 10000 + 500); &#125;&#125; 调用：123456789101112131415161718192021222324252627ajax(&#123; url: '', type: 'GET', data: &#123;&#125;, success:function(res)&#123; res = JSON.parse(res); console.log(res); &#125;&#125;);ajax(&#123; url: '', type: 'POST', data: &#123;&#125;, success:function(res)&#123; res = JSON.parse(res); console.log(res); &#125;&#125;);ajax(&#123; url: '', jsonp: 'jsonpCallback', data: &#123;&#125;, success:function(res)&#123; console.log(res); &#125;&#125;);","categories":[],"tags":[{"name":"ajax","slug":"ajax","permalink":"http://yoursite.com/tags/ajax/"},{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"}]},{"title":"Chrome表单自动填充后背景色为黄色","slug":"Chrome表单自动填充后背景色为黄色","date":"2017-06-06T09:58:31.000Z","updated":"2017-06-06T10:02:09.888Z","comments":true,"path":"2017/06/06/Chrome表单自动填充后背景色为黄色/","link":"","permalink":"http://yoursite.com/2017/06/06/Chrome表单自动填充后背景色为黄色/","excerpt":"","text":"1234567891011121314151617181. input:-webkit-autofill, input:-webkit-autofill:hover, input:-webkit-autofill:focus, input:-webkit-autofill:active &#123; -webkit-box-shadow: 0 0 0px 1000px #fff inset !important; // 背景色为白色 -webkit-text-fill-color: #000 !important; // 字体黑色&#125; 2. input:-webkit-autofill, input:-webkit-autofill:hover, input:-webkit-autofill:focus, input:-webkit-autofill:active &#123; -webkit-transition-delay: 9999s; -webkit-transition: color 9999s ease-out, background-color 9999s ease-out; &#125;","categories":[],"tags":[{"name":"css兼容","slug":"css兼容","permalink":"http://yoursite.com/tags/css兼容/"}]},{"title":"react前后端分离跨域请求webpack配置","slug":"react前后端分离跨域请求webpack配置","date":"2017-06-06T09:21:22.701Z","updated":"2017-06-06T09:24:31.312Z","comments":true,"path":"2017/06/06/react前后端分离跨域请求webpack配置/","link":"","permalink":"http://yoursite.com/2017/06/06/react前后端分离跨域请求webpack配置/","excerpt":"","text":"12345678//跨域proxy: &#123; '*': &#123; target: 'http://192.168.0.0:8080/', secure: false, &#125;&#125;`","categories":[],"tags":[]},{"title":"遍历JSON中各个不同年份的月份信息到指定的容器中","slug":"遍历JSON中各个不同年份的月份信息到指定的容器中","date":"2017-06-06T09:08:31.733Z","updated":"2017-06-07T02:12:57.101Z","comments":true,"path":"2017/06/06/遍历JSON中各个不同年份的月份信息到指定的容器中/","link":"","permalink":"http://yoursite.com/2017/06/06/遍历JSON中各个不同年份的月份信息到指定的容器中/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"H5 iOS输入框被虚拟键盘遮挡","slug":"H5 iOS输入框被虚拟键盘遮挡","date":"2017-06-06T08:34:06.542Z","updated":"2017-06-06T09:02:52.736Z","comments":true,"path":"2017/06/06/H5 iOS输入框被虚拟键盘遮挡/","link":"","permalink":"http://yoursite.com/2017/06/06/H5 iOS输入框被虚拟键盘遮挡/","excerpt":"","text":"1234//一句代码，搞定setTimeout(function()&#123; document.body.scrollTop = document.body.scrollHeight;&#125;,100);","categories":[],"tags":[]},{"title":"a标签链接跳转传参接收","slug":"a标签链接跳转传参接收","date":"2017-06-01T09:36:30.000Z","updated":"2017-06-07T02:24:29.822Z","comments":true,"path":"2017/06/01/a标签链接跳转传参接收/","link":"","permalink":"http://yoursite.com/2017/06/01/a标签链接跳转传参接收/","excerpt":"","text":"1234567891011121314window.location.href=\"hello.htm?param=\"+param;function getUrlParam(key)&#123; // 获取参数 var url = window.location.search; // 正则筛选地址栏 var reg = new RegExp(\"(^|&amp;)\"+ key +\"=([^&amp;]*)(&amp;|$)\"); // 匹配目标参数 var result = url.substr(1).match(reg); //返回参数值 decodeURIComponent()乱码解析 return result ? decodeURIComponent(result[2]) : null;&#125;var param=getUrlParam('param');console.log(param);","categories":[],"tags":[{"name":"地址栏","slug":"地址栏","permalink":"http://yoursite.com/tags/地址栏/"}]},{"title":"页面超时302处理","slug":"页面超时302处理","date":"2017-06-01T02:22:17.040Z","updated":"2017-06-06T09:06:10.065Z","comments":true,"path":"2017/06/01/页面超时302处理/","link":"","permalink":"http://yoursite.com/2017/06/01/页面超时302处理/","excerpt":"","text":"12345//重定向，页面超时会触发if(data.errors &amp;&amp; data.errors[0] &amp;&amp; data.errors[0].code === \"302\")&#123; window.location.href = \"./index.htm/#/home\"; return;&#125;;","categories":[],"tags":[]}]}